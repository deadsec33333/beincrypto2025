import{d as $,k as x}from"/jobs/build/_shared/chunk-OTKXJQRY.js";var M={};$(M,{bitGet:()=>V,bitLen:()=>H,bitMask:()=>q,bitSet:()=>j,bytesToHex:()=>d,bytesToNumberBE:()=>v,bytesToNumberLE:()=>N,concatBytes:()=>A,createHmacDrbg:()=>C,ensureBytes:()=>O,equalBytes:()=>_,hexToBytes:()=>y,hexToNumber:()=>h,numberToBytesBE:()=>B,numberToBytesLE:()=>S,numberToHexUnpadded:()=>E,numberToVarBytesBE:()=>k,utf8ToBytes:()=>F,validateObject:()=>G});x();var m=BigInt(0),p=BigInt(1),I=BigInt(2),g=t=>t instanceof Uint8Array,T=Array.from({length:256},(t,e)=>e.toString(16).padStart(2,"0"));function d(t){if(!g(t))throw new Error("Uint8Array expected");let e="";for(let r=0;r<t.length;r++)e+=T[t[r]];return e}function E(t){let e=t.toString(16);return e.length&1?`0${e}`:e}function h(t){if(typeof t!="string")throw new Error("hex string expected, got "+typeof t);return BigInt(t===""?"0":`0x${t}`)}function y(t){if(typeof t!="string")throw new Error("hex string expected, got "+typeof t);let e=t.length;if(e%2)throw new Error("padded hex string expected, got unpadded hex of length "+e);let r=new Uint8Array(e/2);for(let n=0;n<r.length;n++){let o=n*2,i=t.slice(o,o+2),u=Number.parseInt(i,16);if(Number.isNaN(u)||u<0)throw new Error("Invalid byte sequence");r[n]=u}return r}function v(t){return h(d(t))}function N(t){if(!g(t))throw new Error("Uint8Array expected");return h(d(Uint8Array.from(t).reverse()))}function B(t,e){return y(t.toString(16).padStart(e*2,"0"))}function S(t,e){return B(t,e).reverse()}function k(t){return y(E(t))}function O(t,e,r){let n;if(typeof e=="string")try{n=y(e)}catch(i){throw new Error(`${t} must be valid hex string, got "${e}". Cause: ${i}`)}else if(g(e))n=Uint8Array.from(e);else throw new Error(`${t} must be hex string or Uint8Array`);let o=n.length;if(typeof r=="number"&&o!==r)throw new Error(`${t} expected ${r} bytes, got ${o}`);return n}function A(...t){let e=new Uint8Array(t.reduce((n,o)=>n+o.length,0)),r=0;return t.forEach(n=>{if(!g(n))throw new Error("Uint8Array expected");e.set(n,r),r+=n.length}),e}function _(t,e){if(t.length!==e.length)return!1;for(let r=0;r<t.length;r++)if(t[r]!==e[r])return!1;return!0}function F(t){if(typeof t!="string")throw new Error(`utf8ToBytes expected string, got ${typeof t}`);return new Uint8Array(new TextEncoder().encode(t))}function H(t){let e;for(e=0;t>m;t>>=p,e+=1);return e}function V(t,e){return t>>BigInt(e)&p}var j=(t,e,r)=>t|(r?p:m)<<BigInt(e),q=t=>(I<<BigInt(t-1))-p,w=t=>new Uint8Array(t),b=t=>Uint8Array.from(t);function C(t,e,r){if(typeof t!="number"||t<2)throw new Error("hashLen must be a number");if(typeof e!="number"||e<2)throw new Error("qByteLen must be a number");if(typeof r!="function")throw new Error("hmacFn must be a function");let n=w(t),o=w(t),i=0,u=()=>{n.fill(1),o.fill(0),i=0},s=(...f)=>r(o,n,...f),c=(f=w())=>{o=s(b([0]),f),n=s(),f.length!==0&&(o=s(b([1]),f),n=s())},U=()=>{if(i++>=1e3)throw new Error("drbg: tried 1000 values");let f=0,a=[];for(;f<e;){n=s();let l=n.slice();a.push(l),f+=n.length}return A(...a)};return(f,a)=>{u(),c(f);let l;for(;!(l=a(U()));)c();return u(),l}}var D={bigint:t=>typeof t=="bigint",function:t=>typeof t=="function",boolean:t=>typeof t=="boolean",string:t=>typeof t=="string",stringOrUint8Array:t=>typeof t=="string"||t instanceof Uint8Array,isSafeInteger:t=>Number.isSafeInteger(t),array:t=>Array.isArray(t),field:(t,e)=>e.Fp.isValid(t),hash:t=>typeof t=="function"&&Number.isSafeInteger(t.outputLen)};function G(t,e,r={}){let n=(o,i,u)=>{let s=D[i];if(typeof s!="function")throw new Error(`Invalid validator "${i}", expected function`);let c=t[o];if(!(u&&c===void 0)&&!s(c,t))throw new Error(`Invalid param ${String(o)}=${c} (${typeof c}), expected ${i}`)};for(let[o,i]of Object.entries(e))n(o,i,!1);for(let[o,i]of Object.entries(r))n(o,i,!0);return t}export{d as a,y as b,v as c,N as d,B as e,S as f,O as g,A as h,_ as i,F as j,q as k,C as l,G as m,M as n};
/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */
