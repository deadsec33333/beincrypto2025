!function(){"use strict";const e={startTimeMS:0,timing:!1,initialized:!1,viewability:{},init(){this.initialized=!0,this.viewability=new t,this.viewability.initializeViewability();document.querySelectorAll("[data-adbutler]").forEach((e=>{e.innerHTML.length>0&&this.viewability.addViewableEntity(e,{timeInterval:this.viewability.timeInterval})}))},_logMessage(e){if(this.timing){0===this.startTimeMS&&(this.startTimeMS=Date.now());e=`[AdButler] ${e} (${Date.now()-this.startTimeMS} ms)`}else e=`[AdButler] ${e}`;window.location.search.includes("debug")}};class t{constructor(){this.viewables=[],this.screenWidth=0,this.screenHeight=0,this.screenY=0,this.screenX=0,this.timeInterval=100}initializeViewability(){document.createAttribute("viewable")}async addViewableEntity(t,n){let s=null;if(t instanceof HTMLElement?s=t:"string"==typeof t&&(s=document.querySelector(t)),!s)return;const r=new i(n);r.initialize(s),this.viewables.forEach((e=>{e.DOMElement.id===t.id&&(clearInterval(e.timer),this.viewables.splice(this.viewables.indexOf(e),1))})),this.viewables.push(r),r.recalculate(),await async function(t){const i=t.DOMElement.dataset?.adbutlereligiblecallback;if(!i)throw new Error("No callback adbutlereligiblecallback provided");try{const n=await fetch(i);if(!n.ok)throw new Error(`Network response was not ok.\n Status Code: ${n.status}`);e._logMessage(`Viewability.markEligible(${t.DOMElement.id}) --\x3e ${i}`)}catch(e){console.error("There was a problem with the fetch operation:",e)}}(r)}}class i{constructor(e){var t;e=e||{},this.width=0,this.height=0,this.position={top:0,left:0},this.percentOnScreen=0,this.durationOnScreen=0,this.DOMElement={},this.timer=null,this.observer=null,this.timeInterval=null!==(t=e?.timeInterval)&&void 0!==t?t:100,this.settings={percentageToBeViewable:e.percentageToBeViewable||50,timeBeforeViewable:e.timeBeforeViewable||1e3}}recalculate(){this.screenHeight=window.innerHeight,this.screenWidth=window.innerWidth,this.screenX=window.scrollX,this.screenY=window.scrollY;const e=this.DOMElement.getBoundingClientRect();this.position.left=e.left+this.screenX,this.position.top=e.top+this.screenY,this.width=e.width,this.height=e.height;const t={x1:this.screenX,y1:this.screenY+this.screenHeight,x2:this.screenX+this.screenWidth,y2:this.screenY},i={x1:this.position.left,y1:this.position.top+this.height,x2:this.position.left+this.width,y2:this.position.top},n=(i.x2-i.x1)*(i.y1-i.y2),s=Math.max(0,Math.min(t.x2,i.x2)-Math.max(t.x1,i.x1))*Math.max(0,Math.min(t.y1,i.y1)-Math.max(t.y2,i.y2));this.percentOnScreen=s/n*100}initialize(e){this.DOMElement=e,this.DOMElement.setAttribute("viewable","false");const t=this;if("IntersectionObserver"in window){const e={threshold:[t.settings.percentageToBeViewable/100]};this.observer=(({targetElement:e,onReachElement:t=()=>{},onNotReachElement:i=()=>{},onFullVisible:n=()=>{},threshold:s=.5,showOnce:r=!0,observerOptions:a={}})=>{if(!(e instanceof HTMLElement))return void console.error(`Element with selector '${e}' is not an instance of HTMLElement.`);const l=new IntersectionObserver((s=>{s.forEach((s=>{1===s.intersectionRatio&&n?.call(void 0,{targetElement:e,entry:s}),s.isIntersecting?(t&&"function"==typeof t&&t?.call(void 0,{targetElement:e,entry:s}),r&&l.disconnect()):i?.call(void 0,{targetElement:e,entry:s})}))}),{threshold:s,...a});return l.observe(e),l})({targetElement:this.DOMElement,onReachElement(){t.timer=setInterval((()=>{t.durationOnScreen+=t.timeInterval,t.durationOnScreen>=t.settings.timeBeforeViewable&&(t.observer.unobserve(t.DOMElement),n(t))}),t.timeInterval)},onNotReachElement(){clearInterval(t.timer)},observerOptions:e})}else this.timer=setInterval((()=>{t.recalculate(),t.percentOnScreen>=t.settings.percentageToBeViewable?(t.durationOnScreen+=t.timeInterval,t.durationOnScreen>=t.settings.timeBeforeViewable&&n(t)):t.durationOnScreen=0}),t.timeInterval)}}async function n(t){t.DOMElement.setAttribute("viewable","true"),clearInterval(t.timer);const i=t.DOMElement.dataset?.adbutlerviewablecallback;if(!i)throw new Error("No callback adbutlerviewablecallback provided");try{const n=await fetch(i);if(!n.ok)throw new Error(`Network response was not ok.\n Status Code: ${n.status}`);e._logMessage(`Viewability.markViewable(${t.DOMElement.id}) --\x3e ${i}`)}catch(e){console.error("There was a problem with the fetch operation:",e)}}window.addEventListener("DOMContentLoaded",(()=>{e.init()}))}();